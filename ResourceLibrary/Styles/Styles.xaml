<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">

    <Style x:Key="smallicon" TargetType="{x:Type Path}">
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Fill" Value="#FF333333" />
        <Setter Property="Stretch" Value="Uniform" />
    </Style>


    <Style x:Key="smallimg" TargetType="{x:Type Image}">
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Stretch" Value="Uniform" />
    </Style>


    <Style x:Key="tbbutton" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="26" />
        <Setter Property="Height" Value="26" />
    </Style>


    <Style x:Key="trimbychar" TargetType="{x:Type TextBlock}">
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    </Style>


    <Style x:Key="ctxmenu" TargetType="{x:Type ContextMenu}">
        <Setter Property="FontSize" Value="12" />
    </Style>

    
    <Style x:Key="menu" TargetType="{x:Type Menu}">
        <Setter Property="FontSize" Value="12" />
    </Style>


    <Style x:Key="disableable" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ResourceKey=trimbychar}">
        <Style.Triggers>
            <!--<Trigger Property="IsEnabled" Value="True">
                <Trigger.Setters>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                </Trigger.Setters>
            </Trigger>-->
            
            <Trigger Property="IsEnabled" Value="False">
                <Trigger.Setters>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger.Setters>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="stripedrow" TargetType="{x:Type ListViewItem}">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{x:Static SystemColors.HighlightColor}" />

            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="{x:Static SystemColors.HighlightTextColor}" />
        </Style.Resources>

        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background" Value="WhiteSmoke" />
            </Trigger>
        </Style.Triggers>
    </Style>
    


    <Style x:Key="placeholder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        
                        <TextBox x:Name="textSource" 
                                 Background="Transparent" 
                                 Panel.ZIndex="2">
                            <TextBox.Text>
                                <Binding Path="Text" RelativeSource="{RelativeSource TemplatedParent}" Mode="TwoWay"
                                         UpdateSourceTrigger="PropertyChanged" />
                            </TextBox.Text>
                        </TextBox>
                        
                        <TextBox Text="{TemplateBinding Tag}"
                                 Background="{TemplateBinding Background}"
                                 Panel.ZIndex="1">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}">
                                    <Setter Property="Foreground" Value="Transparent"/>
                                    <Style.Triggers>
                                        <DataTrigger Value="">
                                            <DataTrigger.Binding>
                                                <Binding Path="Text" Source="{x:Reference textSource}" />
                                            </DataTrigger.Binding>
                                            <Setter Property="Foreground" Value="DarkGray"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
